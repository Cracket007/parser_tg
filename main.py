import telebot
from telethon import TelegramClient, events
import asyncio
import os
from dotenv import load_dotenv
import logging
import threading
import signal

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑–æ–≤–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO,
                   format='%(asctime)s - %(message)s',
                   datefmt='%H:%M:%S')
logger = logging.getLogger(__name__)

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# API –¥–∞–Ω–Ω—ã–µ –¥–ª—è Telethon
API_ID = os.getenv('API_ID')
API_HASH = os.getenv('API_HASH')
BOT_TOKEN = os.getenv('BOT_TOKEN')

# ID —á–∞—Ç–∞, –∫—É–¥–∞ –±—É–¥—É—Ç –ø–µ—Ä–µ—Å—ã–ª–∞—Ç—å—Å—è —Å–æ–æ–±—â–µ–Ω–∏—è
DESTINATION_CHAT_ID = "-1002322331895"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–æ–≤
bot = telebot.TeleBot(BOT_TOKEN)
client = TelegramClient('user_session', API_ID, API_HASH)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–∞—Ç –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
try:
    chat_info = bot.get_chat(DESTINATION_CHAT_ID)
    logger.info(f"–¶–µ–ª–µ–≤–æ–π —á–∞—Ç –Ω–∞–π–¥–µ–Ω: {chat_info.title} (ID: {chat_info.id})")
except Exception as e:
    logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —á–∞—Ç–∞: {e}")
    logger.error("–ë–æ—Ç –Ω–µ —Å–º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ ID —á–∞—Ç–∞")
    exit(1)

# –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
KEYWORDS = [
    # –ú–∞—Å—Å–∞–∂
    '–º–∞—Å—Å–∞–∂', 'massage', '–º–∞—Å–∞–∂', '–º–∞—Å—Å–∞–∂–∏—Å—Ç', '–º–∞—Å—Å–∞–∂–∏—Å—Ç–∫–∞',
]

# –§–ª–∞–≥ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
running = True

def signal_handler(sig, frame):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è"""
    global running
    logger.info("\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è. –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è...")
    running = False

@client.on(events.NewMessage(chats=None))
async def handler(event):
    try:
        # –õ–æ–≥–∏—Ä—É–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        chat = await event.get_chat()
        sender = await event.get_sender()
        message = event.message.text if event.message.text else ''
        
        logger.info(f"üëÄ –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ '{chat.title}':")
        logger.info(f"üìù –¢–µ–∫—Å—Ç: {message}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
        if any(keyword in message.lower() for keyword in KEYWORDS):
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –ø–µ—Ä–µ—Å—ã–ª–∫–∏
            forward_text = f"üîç –ù–∞–π–¥–µ–Ω–æ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!\n\n"
            forward_text += f"üí¨ –ß–∞—Ç: {chat.title}\n"
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ
            sender_info = []
            if hasattr(sender, 'first_name') and sender.first_name:
                sender_info.append(sender.first_name)
            if hasattr(sender, 'last_name') and sender.last_name:
                sender_info.append(sender.last_name)
            if hasattr(sender, 'username') and sender.username:
                sender_info.append(f"@{sender.username}")
            
            forward_text += f"üë§ –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {' '.join(sender_info)}\n"
            forward_text += f"üìù –°–æ–æ–±—â–µ–Ω–∏–µ:\n{message}\n"
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫–∏
            if hasattr(chat, 'username') and chat.username:
                forward_text += f"\nüîó –°—Å—ã–ª–∫–∞ –Ω–∞ —á–∞—Ç: https://t.me/{chat.username}"
            if hasattr(sender, 'username') and sender.username:
                forward_text += f"\nüë§ –ü—Ä–æ—Ñ–∏–ª—å: https://t.me/{sender.username}"
            
            # –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
            found_keywords = [kw for kw in KEYWORDS if kw in message.lower()]
            forward_text += f"\n\nüîë –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞: {', '.join(found_keywords)}"
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–µ—Ä–µ–∑ telebot
            bot.send_message(DESTINATION_CHAT_ID, forward_text)
            logger.info(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª—é—á–µ–≤—ã–º–∏ —Å–ª–æ–≤–∞–º–∏ –ø–µ—Ä–µ—Å–ª–∞–Ω–æ")
            
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

async def main():
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ Ctrl+C
    signal.signal(signal.SIGINT, signal_handler)
    
    await client.start()
    
    if await client.is_user_authorized():
        logger.info("–ö–ª–∏–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω")
        bot.send_message(DESTINATION_CHAT_ID, "ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
        logger.info("–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
    else:
        logger.error("–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞")
        return

    try:
        logger.info("‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω. –î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
        while running:
            await asyncio.sleep(1)
    finally:
        # –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
        await client.disconnect()
        bot.stop_polling()
        logger.info("üëã –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

if __name__ == '__main__':
    logger.info("–ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞...")
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        pass
    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
